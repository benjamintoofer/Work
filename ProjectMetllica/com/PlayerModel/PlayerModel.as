package  com.PlayerModel{		import flash.display.MovieClip;	import flash.display.Sprite;	import com.Utils.StageBoundery;	import flash.display.Stage;	import com.ItemModel.Weapon;	import flash.events.Event;		public class PlayerModel extends MovieClip{		 const GRAVITY:Number = .4;		 		//var xPos:Number = 0;				public var vx:Number = 0;		public var vy:Number = 0;		var ax:Number = 0;		var ay:Number = 0;		var friction:Number = 0;		var playerWidth:Number = 0;		public var playerHeight:Number = 0;		var health:Number = 0;		var energy:Number = 0;		var critChance:Number = 0;		var moveSpeed:Number = 0;		var attackSpeed:Number = 0;		var inTheAir:Boolean = false;		var stageRef:Stage;		var myWeapon:Weapon;		//Graphics		var player:Sprite;				public function PlayerModel(stageRef:Stage,xPos:Number,yPos:Number,pWidth:Number,pHeight:Number) {						this.stageRef = stageRef;			this.x = xPos;			this.y = yPos;			playerWidth = pWidth;			playerHeight = pHeight;						init();					}		private function init():void		{			player = new Sprite();			this.addChild(player);			myWeapon = new Weapon();			addChildAt(myWeapon,1);			myWeapon.x =this. _rightHand.x			myWeapon.y =this. _rightHand.y			myWeapon.rotation = 30;			draw();		}		public function draw():void		{			player.graphics.clear();			player.graphics.lineStyle(2,0x0000FF);			player.graphics.drawRect(-(playerWidth*.5),-(playerHeight*.5),playerWidth,playerHeight);			player.graphics.endFill();		}		public function update():void		{			//Check bounderies			StageBoundery.checkFloor(this,stageRef);			//Gravity only when off the ground			if(this.myBottom < stageRef.stageHeight)			{				this.vy += GRAVITY;			}						//Update players speed and position			this.vx += ax;			this.vy += ay;			this.vx *= friction;			this.x += vx;			this.y += vy; 						//Reset vy if very small			if(Math.abs(this.vy)<.07)			{				this.vy = 0;			}			//Reset vx if very small			if(Math.abs(this.vx)<.07)			{				this.vx = 0;			}		}		public function get myBottom():Number		{			return this.y + (this.playerHeight*.5);		}				public function set isInTheAir(value:Boolean):void		{			inTheAir = value;		}	}		}